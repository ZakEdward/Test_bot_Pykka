import telebot

from game import Game
from player import Player


class BotManager:
    def __init__(self, api_token, actor_manager):
        self.bot = telebot.TeleBot(api_token)
        self.actor_manager = actor_manager
        self.game_queue = []

        @self.bot.message_handler(commands=['start'])
        def send_welcome(message):
            user_name = message.from_user.first_name
            self.bot.reply_to(message, f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}! üéÆ\n"
                                       "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞'!\n"
                                       "–ß—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /join.")

        @self.bot.message_handler(commands=['join'])
        def join_game(message):
            player_id = message.from_user.id
            chat_id = message.chat.id
            player_name = message.from_user.first_name

            if self.actor_manager.get_player_actor(player_id):
                self.bot.reply_to(message, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
                return

            # –°–æ–∑–¥–∞–µ–º –∞–∫—Ç–æ—Ä –¥–ª—è –∏–≥—Ä–æ–∫–∞
            self.actor_manager.create_player_actor(player_id, player_name, chat_id)
            self.game_queue.append(player_id)

            self.bot.reply_to(message, f"{player_name}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ! –û–∂–∏–¥–∞–π—Ç–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞...")

            print(f"–¢–µ–∫—É—â–∞—è –æ—á–µ—Ä–µ–¥—å: {self.game_queue}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

            # –ï—Å–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –µ—Å—Ç—å –¥–≤–∞ –∏–≥—Ä–æ–∫–∞, –Ω–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É
            if len(self.game_queue) >= 2:
                self.start_game()

        @self.bot.message_handler(func=lambda message: True)
        def handle_message(message):
            player_id = message.from_user.id
            text = message.text.lower()

            player_actor = self.actor_manager.get_player_actor(player_id)
            if not player_actor:
                self.bot.reply_to(message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∏–≥—Ä–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /join.")
                return

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –∏–≥—Ä–æ–∫–∞
            response = player_actor.ask({'action': 'set_choice', 'choice': text})
            if not response['status']:
                self.bot.reply_to(message, "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞.")
                return

            self.bot.reply_to(message, f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏: {text}. –ñ–¥–∏—Ç–µ –≤—ã–±–æ—Ä–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞...")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–¥–µ–ª–∞–ª–∏ –ª–∏ –æ–±–∞ –∏–≥—Ä–æ–∫–∞ –≤—ã–±–æ—Ä
            opponent_id = self.find_opponent(player_id)
            if opponent_id:
                print(f"–ò–≥—Ä–æ–∫ {player_id} –Ω–∞—à–µ–ª —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ {opponent_id}. –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.")
                self.determine_winner(player_id, opponent_id)
            else:
                print(f"–ò–≥—Ä–æ–∫ {player_id} –Ω–µ –Ω–∞—à–µ–ª —Å–æ–ø–µ—Ä–Ω–∏–∫–∞. –û–∂–∏–¥–∞–Ω–∏–µ...")

    def find_opponent(self, player_id):
        print(f"–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞ {player_id}. –û—á–µ—Ä–µ–¥—å: {self.game_queue}")
        for other_player_id in self.game_queue:
            if other_player_id != player_id:
                opponent_actor = self.actor_manager.get_player_actor(other_player_id)
                opponent_choice = opponent_actor.ask({'action': 'get_choice'})['choice']
                print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ {other_player_id}: choice={opponent_choice}")
                if opponent_choice:
                    print(f"–ù–∞–π–¥–µ–Ω —Å–æ–ø–µ—Ä–Ω–∏–∫: {other_player_id}")
                    return other_player_id
        print("–°–æ–ø–µ—Ä–Ω–∏–∫ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤.")
        return None


    def start_game(self):
        if len(self.game_queue) < 2:
            print("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã.")
            return

        player1_id = self.game_queue[0]
        player2_id = self.game_queue[1]

        print(f"–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–∞–º–∏ {player1_id} –∏ {player2_id}")

        player1_actor = self.actor_manager.get_player_actor(player1_id)
        player2_actor = self.actor_manager.get_player_actor(player2_id)

        self.bot.send_message(player1_actor.ask({'action': 'get_player_data'})['chat_id'],
                              "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í—ã–±–µ—Ä–∏—Ç–µ: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞.")
        self.bot.send_message(player2_actor.ask({'action': 'get_player_data'})['chat_id'],
                              "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í—ã–±–µ—Ä–∏—Ç–µ: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞.")

    def determine_winner(self, player1_id, player2_id):
        player1_actor = self.actor_manager.get_player_actor(player1_id)
        player2_actor = self.actor_manager.get_player_actor(player2_id)

        player1_data = player1_actor.ask({'action': 'get_player_data'})
        player2_data = player2_actor.ask({'action': 'get_player_data'})

        print(f"–î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ 1: {player1_data}")
        print(f"–î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ 2: {player2_data}")

        result = Game.calculate_winner(
            Player(player1_data['player_id'], player1_data['name'], player1_data['chat_id'], player1_data['choice']),
            Player(player2_data['player_id'], player2_data['name'], player2_data['chat_id'], player2_data['choice'])
        )

        self.bot.send_message(player1_data['chat_id'], result)
        self.bot.send_message(player2_data['chat_id'], result)

        # –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        self.game_queue.remove(player1_id)
        self.game_queue.remove(player2_id)
        print(f"–ò–≥—Ä–æ–∫–∏ {player1_id} –∏ {player2_id} —É–¥–∞–ª–µ–Ω—ã –∏–∑ –æ—á–µ—Ä–µ–¥–∏.")

        # –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –∏–≥—Ä—ã
        self.actor_manager.remove_player_actor(player1_id)
        self.actor_manager.remove_player_actor(player2_id)
        print(f"–ò–≥—Ä–æ–∫–∏ {player1_id} –∏ {player2_id} —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∏–≥—Ä—ã.")

    def start_bot(self):
        self.bot.polling()